name: Build Yocto

on:
  workflow_dispatch:
    inputs:
      # The name of the branch of the Yocto source repository which corresponds to a Yocto release: https://wiki.yoctoproject.org/wiki/Releases
      # The raspberry-pi source should also have a release with the same name.
      yoctoBranch:
        description: 'Yocto Branch To Use For Build'
        default: 'dunfell'
        required: true
        type: string

env:
  YOCTO_SOURCE: 'git://git.yoctoproject.org/poky'
  RPI_SOURCE: 'git://git.yoctoproject.org/meta-raspberrypi.git'
  OE_SOURCE: 'git://git.openembedded.org/meta-openembedded'

jobs:
  build:
    name: Build RPi Yocto Image
    runs-on: ubuntu-22.04

    steps:
      - name: Set Date Time
        id: date_time
        run: echo "::set-output name=run_date::$(date +'%Y%m%d')"

      - name: Maximize build disk space
        uses: easimon/maximize-build-space@v10
        with:
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build
        run: |
          echo "Free space:"
          df -h

      - name: Install Required Packages
        run: |
          sudo apt-get update
          sudo apt-get install -y gawk wget git-core diffstat unzip texinfo gcc-multilib build-essential chrpath socat cpio python3 python3-pip python3-pexpect xz-utils debianutils iputils-ping libsdl1.2-dev xterm
          sudo locale-gen en_US.UTF-8

      - name: Clone Resources
        run: |
          git clone -b ${{ inputs.yoctoBranch }} --single-branch $YOCTO_SOURCE yocto

          cd yocto/
          git clone -b ${{ inputs.yoctoBranch }} $RPI_SOURCE
          git clone -b ${{ inputs.yoctoBranch }} $OE_SOURCE

      - name: Build Yocto
        run: |
          cd yocto/

          source oe-init-build-env

          bitbake-layers add-layer ../meta-openembedded/meta-oe
          bitbake-layers add-layer ../meta-openembedded/meta-python
          bitbake-layers add-layer ../meta-openembedded/meta-multimedia
          bitbake-layers add-layer ../meta-openembedded/meta-networking
          bitbake-layers add-layer ../meta-raspberrypi

          sed -i 's/MACHINE ??= "qemux86-64"/MACHINE ?= "raspberrypi4-64"/' conf/local.conf

          bitbake core-image-base --runonly=fetch
          bitbake core-image-base

      - name: Archive Artifact
        uses: actions/upload-artifact@v2
        with:
          name: yocto-rpi-image-${{ steps.date_time.outputs.run_date }}
          path: yocto/build/tmp/deploy/images/raspberrypi4-64/*.bz2
