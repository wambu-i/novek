name: Build Yocto

on:
  workflow_dispatch:
    inputs:
      yoctoBranch: 
        description: 'Yocto Branch To Use For Build'
        default: 'dunfell'
        required: true
        type: string

env:
  YOCTO_SOURCE: ''
  RPI_SOURCE: 'git://git.yoctoproject.org/meta-raspberrypi.git'
  OE_SOURCE: 'git://git.openembedded.org/meta-openembedded'

jobs:
  build:
    name: Build RPi Yocto Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Required Packages
        run: |
          sudo apt-get update
          sudo apt-get install -y gawk wget git-core diffstat unzip texinfo gcc-multilib build-essential chrpath socat cpio python3 python3-pip python3-pexpect xz-utils debianutils iputils-ping libsdl1.2-dev xterm
          sudo locale-gen en_US.UTF-8

      - name: Clone Yocto Repository
        run: git clone -b ${{ inputs.yoctoBranch }} --single-branch git://git.yoctoproject.org/poky yocto

      - name: Setup Yocto Environment
        run: |
          cd yocto/
          git clone -b dunfell $RPI_SOURCE
          git clone -b dunfell $OE_SOURCE

          source oe-init-build-env

          bitbake-layers add-layer ../meta-openembedded/meta-oe
          bitbake-layers add-layer ../meta-openembedded/meta-python
          bitbake-layers add-layer ../meta-openembedded/meta-multimedia
          bitbake-layers add-layer ../meta-openembedded/meta-networking
          bitbake-layers add-layer ../meta-raspberrypi

          sed -i 's/MACHINE ??= "qemux86-64"/MACHINE ?= "raspberrypi4-64"/' conf/local.conf

      - name: Build Raspberry Pi Image
        run: |
          source yocto/oe-init-build-env
          bitbake rpi-basic-image

      - name: Archive Artifact
        uses: actions/upload-artifact@v2
        with:
          name: yocto-rpi-image
          path: yocto/build/tmp/deploy/images/raspberrypi
